{"version":3,"file":"static/js/499.02612770.chunk.js","mappings":"sIAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CACe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GACzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CACAjB,OAAMkB,EACR,GACF,CACF,C,uJC7BMC,EAAW,+BACXC,EAAU,mCAAhB,SAGeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,EAAAA,EAAAA,IAAAA,MAAf,2GAA2BC,EAA3B,+BAAiC,GAAIC,EAArC,+BAA8C,CAAC,EAA/C,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMnB,QAAQT,OAAO,IAAI6B,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOR,EAAY,GAAD,OACbF,EADa,uCAC0BC,GAE7C,CAEM,SAASU,EAAgBC,GAC9B,OAAOV,EAAY,GAAD,OACbF,EADa,+BACkBY,EADlB,oBACmCX,EADnC,8CAGnB,CAEM,SAASY,EAAWC,GACzB,OAAOZ,EAAY,GAAD,OACbF,EADa,kBACKc,EADL,oBACwBb,GAE3C,CAEM,SAASc,EAAQD,GACtB,OAAOZ,EAAY,GAAD,OACbF,EADa,kBACKc,EADL,4BACgCb,GAEnD,CAEM,SAASe,EAAWF,GACzB,OAAOZ,EAAY,GAAD,OACbF,EADa,kBACKc,EADL,4BACgCb,EADhC,WAGnB,C,qECrCYgB,E,OAAQC,EAAAA,GAAH,iU,SCCH,SAASC,EAAT,GAAyB,IAARC,EAAO,EAAPA,KAC9B,OAAO,SAACH,EAAD,UAAQG,GAChB,C,uICHYC,EAAiBH,EAAAA,EAAAA,IAAH,8HAOdI,EAAcJ,EAAAA,EAAAA,IAAH,2KASXK,EAAeL,EAAAA,EAAAA,GAAH,4DAKZM,EAAcN,EAAAA,EAAAA,EAAH,2GAOXO,EAAcP,EAAAA,EAAAA,KAAH,8D,kBCxBT,SAASQ,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACOf,GAAWgB,EAAAA,EAAAA,MAAXhB,QAOP,OALAiB,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAqBlB,GAClBxB,MAAK,SAAAgB,GAAQ,OAAIuB,EAAWvB,EAAS2B,QAAxB,GACjB,GAAE,CAACnB,KAGF,8BACGc,EAAQM,OAAS,GACf,SAACb,EAAD,UACEO,EAAQO,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,OAAQC,EAAd,EAAcA,QAAd,OACX,UAAChB,EAAD,YACI,UAACC,EAAD,wBACW,SAACE,EAAD,UAAcY,QAEzB,SAACb,EAAD,UAAcc,MAJAF,EADP,OAUf,SAACb,EAAD,WACE,SAACJ,EAAA,EAAD,CAAQC,KAAK,qDAOtB,C","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","api/Api.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","pages/Reviews/Reviews.styled.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","const BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"6f3a72a470b06bab99f8d69f54b4e2d3\";\n\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found'));\n};\n\nexport function getTrending() {\n  return fetchMovies(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n};\n\nexport function getMoviesSearch(query) {\n  return fetchMovies(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  )\n};\n\nexport function getMovieId(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  )\n};\n\nexport function getCast(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  )\n};\n\nexport function getReviews(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\n  )\n};","import styled from \"@emotion/styled\";\n\nexport const Title = styled.h1`\nwidth: auto;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 5px;\nmargin-top: 0;\nmargin-bottom: 20px;\nmargin-left: auto;\nmargin-right: auto;\nborder-radius: 10px;\ntext-align: center;\ncolor: orange;\nbox-shadow: 0 0 10px 1px orange;\nbackground-color: transperant;\n`;\n\n// -image: repeating-linear-gradient(\n//   -45deg,\n//   #7bd4eb,\n//   #7bd4eb 15px,\n//   #fcfcfc 15px,\n//   #fcfcfc 30px\n// );","import PropTypes from 'prop-types';\nimport { Title } from './Header.styled';\n\nexport default function Header({text}) {\n  return <Title>{text}</Title>\n};\n\nHeader.propTypes = {\n  text: PropTypes.string.isRequired,\n}","import styled from \"@emotion/styled\";\n\nexport const ReviewsGallery = styled.div`\n  border-radius: 10px;\n  padding: 25px;\n  border-radius: 10px;\n  box-shadow: 0 0 10px 1px orange;\n`;\n\nexport const ReviewsItem = styled.div`\n  border-radius: 10px;\n  padding: 35px;\n  margin-top: 15px;\n  margin-bottom: 15px;\n  border-radius: 10px;\n  box-shadow: 0 0 10px 1px orange;\n`;\n\nexport const ReviewsTitle = styled.h3`\nfont-weight: bold;\ncolor: orange;\n`;\n\nexport const ReviewsText = styled.p`\n  display: flex;\n  flex-direction: column;\n  font-weight: bold;\n  color: gray;\n`;\n\nexport const ReviewsSpan = styled.span`\n  font-weight: bold;\n  color: gray;\n`;","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport * as  moviesApi from '../../api/Api';\nimport { ReviewsGallery, ReviewsItem, ReviewsTitle, ReviewsSpan, ReviewsText} from \"./Reviews.styled\";\nimport Header from '../../components/Header/Header';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const {movieId} = useParams();\n\n  useEffect(() => {\n    moviesApi.getReviews(movieId)\n      .then(response => setReviews(response.results));\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0\n      ? (<ReviewsGallery>\n          {reviews.map(({id, author, content}) => (\n            <ReviewsItem key={id}>\n                <ReviewsTitle>\n                  Author : <ReviewsSpan>{author}</ReviewsSpan>\n                </ReviewsTitle>\n                <ReviewsText>{content}</ReviewsText>\n            </ReviewsItem>\n          ))}\n          </ReviewsGallery>\n      ) : (\n        <ReviewsTitle>\n          <Header text='We donâ€™t have any reviews for this movie'  />\n        </ReviewsTitle>\n\n      )\n      }\n    </>\n  )\n}"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","BASE_URL","API_KEY","fetchMovies","url","config","fetch","response","ok","json","Error","getTrending","getMoviesSearch","query","getMovieId","movieId","getCast","getReviews","Title","styled","Header","text","ReviewsGallery","ReviewsItem","ReviewsTitle","ReviewsText","ReviewsSpan","Reviews","useState","reviews","setReviews","useParams","useEffect","moviesApi","results","length","map","id","author","content"],"sourceRoot":""}