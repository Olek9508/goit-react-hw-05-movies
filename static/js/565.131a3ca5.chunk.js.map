{"version":3,"file":"static/js/565.131a3ca5.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","api/Api.jsx","pages/Cast/Cast.styled.jsx","pages/Cast/Cast.jsx","pages/MovieDetails/MovieDetails.styled.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","const BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"6f3a72a470b06bab99f8d69f54b4e2d3\";\n\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found'));\n};\n\nexport function getTrending() {\n  return fetchMovies(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n};\n\nexport function getMoviesSearch(query) {\n  return fetchMovies(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  )\n};\n\nexport function getMovieId(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  )\n};\n\nexport function getCast(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  )\n};\n\nexport function getReviews(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\n  )\n};","import styled from \"@emotion/styled\";\n\nexport const CastList = styled.ul`\ndisplay: grid;\nmax-width: calc(100vw - 48px);\ngrid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\ngrid-gap: 16px;\nmargin-top: 0;\nmargin-bottom: 0;\npadding: 0;\nlist-style: none;\nmargin-left: auto;\nmargin-right: auto;\n`;\n\nexport const CastItem = styled.li`\n  border-radius: 10px;\n  padding: 35px;\n  border-radius: 10px;\n  box-shadow: 0 0 10px 1px #7bd4eb;\n`;\n\nexport const CastTitle = styled.h3`\nfont-weight: bold;\ncolor: orange;\n`;\n\nexport const CastText = styled.p`\ndisplay: flex;\nflex-direction: column;\nfont-weight: bold;\ncolor: gray;\n`;\n\nexport const CastSpan = styled.span`\n  font-weight: bold;\n  color: gray;\n`;","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport * as moviesApi from 'api/Api';\nimport {\n  CastList,\n  CastItem,\n  CastTitle,\n  CastText,\n  CastSpan,\n} from './Cast.styled';\n// import defaultImg from '../../components/Images/defaultImg.jpg';\nimport {MovieContainer} from '../MovieDetails/MovieDetails.styled';\n\nexport default function Cast() {\n  const [casts, setCasts] = useState(null);\n  const {movieId} = useParams();\n\n  useEffect(() => {\n    moviesApi.getCast(movieId)\n    .then(response => setCasts(response.cast));\n  }, [movieId]);\n\n  const viewPoster = profile_path => {\n    if (profile_path === null) {\n      // return `${defaultImg}`;\n    }\n    return `https://image.tmdb.org/t/p/w300${profile_path}`;\n  };\n\n  return (\n    <>\n      <MovieContainer />\n      {casts && (\n        <CastList>\n          {casts.map(({id, profile_path, name, character}) => (\n            <CastItem key={id}>\n              <img\n                src={`${viewPoster(profile_path) }`}\n                alt={name}\n                width='300'\n              />\n              <CastTitle>{name}</CastTitle>\n              <CastText>\n                {' '}\n                Character : <CastSpan>\n                  {' '}\n                  {character}{' '}\n                </CastSpan>{' '}\n              </CastText>\n            </CastItem>\n          ))}\n        </CastList>\n      )\n      }\n    </>\n  )\n}","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const MovieCardBox = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: 0 0 10px 1px orange;\n`;\n\nexport const MovieInfo = styled.div`\n  display: block;\n  padding: 15px;\n  margin-left: 20px;\n  color: gray;\n`;\n\nexport const MovieContainer = styled.div`\n  width: auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px;\n  margin-top: 0;\n  margin-bottom: 20px;\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 10px;\n  text-align: center;\n  box-shadow: 0 0 10px 1px orange;\n  background-color: transperant;\n  );\n`;\n\nexport const MovieLink = styled(NavLink)`\n  display: inline-block;\n  text-decoration: none;\n  color: greenyellow;\n  font-size: 25px;\n  font-weight: 500;\n  margin: 10px;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: 0 0 10px 1px greenyellow;\n  &.active {\n    color: orange;\n    box-shadow: 0 0 13px 3px orange;\n  }\n  : hover{\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    color: orange;\n    transform: scale(1.1);\n    box-shadow: 0 0 10px 1px orange;\n  }\n`;\n\nexport const MovieTitleH2 = styled.h2`\n  color: orange;\n`;\n\nexport const MovieTitleH3 = styled.h2`\n  color: orange;\n`;\n\n\n  // background-image: repeating-linear-gradient(\n  //   -45deg,\n  //   #7bd4eb,\n  //   #7bd4eb 15px,\n  //   #fcfcfc 15px,\n  //   #fcfcfc 30px"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","BASE_URL","API_KEY","fetchMovies","url","config","fetch","response","ok","json","Error","getTrending","getMoviesSearch","query","getMovieId","movieId","getCast","getReviews","CastList","styled","CastItem","CastTitle","CastText","CastSpan","Cast","useState","casts","setCasts","useParams","useEffect","moviesApi","cast","viewPoster","profile_path","map","id","name","character","src","alt","width","MovieCardBox","MovieInfo","MovieContainer","MovieLink","NavLink","MovieTitleH2","MovieTitleH3"],"sourceRoot":""}